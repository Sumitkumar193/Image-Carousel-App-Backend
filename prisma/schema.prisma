// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Image {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  url         String
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("images")
}

model Roles {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]

  @@map("roles")
}

model User {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  email         String
  name          String?
  password      String
  role          String          @map("role") @db.ObjectId
  roles         Roles           @relation(fields: [role], references: [id], onDelete: Cascade)
  active        Boolean         @default(true)
  disabled      Boolean         @default(false)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  tokens        UserToken[]
  PasswordReset PasswordReset[]

  @@index([email])
  @@map("users")
}

model UserToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  token     String   @unique
  disabled  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("user_tokens")
}

model PasswordReset {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String
  userId    String
  disabled  Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([token])
  @@map("password_reset")
}
